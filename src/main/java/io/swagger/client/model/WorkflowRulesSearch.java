/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Details of the workflow and its transition rules.
 */
@Schema(description = "Details of the workflow and its transition rules.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class WorkflowRulesSearch {
  @SerializedName("expand")
  private String expand = null;

  @SerializedName("ruleIds")
  private List<UUID> ruleIds = new ArrayList<UUID>();

  @SerializedName("workflowEntityId")
  private UUID workflowEntityId = null;

  public WorkflowRulesSearch expand(String expand) {
    this.expand = expand;
    return this;
  }

   /**
   * Use expand to include additional information in the response. This parameter accepts &#x60;transition&#x60; which, for each rule, returns information about the transition the rule is assigned to.
   * @return expand
  **/
  @Schema(example = "transition", description = "Use expand to include additional information in the response. This parameter accepts `transition` which, for each rule, returns information about the transition the rule is assigned to.")
  public String getExpand() {
    return expand;
  }

  public void setExpand(String expand) {
    this.expand = expand;
  }

  public WorkflowRulesSearch ruleIds(List<UUID> ruleIds) {
    this.ruleIds = ruleIds;
    return this;
  }

  public WorkflowRulesSearch addRuleIdsItem(UUID ruleIdsItem) {
    this.ruleIds.add(ruleIdsItem);
    return this;
  }

   /**
   * The list of workflow rule IDs.
   * @return ruleIds
  **/
  @Schema(required = true, description = "The list of workflow rule IDs.")
  public List<UUID> getRuleIds() {
    return ruleIds;
  }

  public void setRuleIds(List<UUID> ruleIds) {
    this.ruleIds = ruleIds;
  }

  public WorkflowRulesSearch workflowEntityId(UUID workflowEntityId) {
    this.workflowEntityId = workflowEntityId;
    return this;
  }

   /**
   * The workflow ID.
   * @return workflowEntityId
  **/
  @Schema(example = "a498d711-685d-428d-8c3e-bc03bb450ea7", required = true, description = "The workflow ID.")
  public UUID getWorkflowEntityId() {
    return workflowEntityId;
  }

  public void setWorkflowEntityId(UUID workflowEntityId) {
    this.workflowEntityId = workflowEntityId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowRulesSearch workflowRulesSearch = (WorkflowRulesSearch) o;
    return Objects.equals(this.expand, workflowRulesSearch.expand) &&
        Objects.equals(this.ruleIds, workflowRulesSearch.ruleIds) &&
        Objects.equals(this.workflowEntityId, workflowRulesSearch.workflowEntityId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expand, ruleIds, workflowEntityId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowRulesSearch {\n");
    
    sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
    sb.append("    ruleIds: ").append(toIndentedString(ruleIds)).append("\n");
    sb.append("    workflowEntityId: ").append(toIndentedString(workflowEntityId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
