/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The IDs of the screens for the screen types of the screen scheme.
 */
@Schema(description = "The IDs of the screens for the screen types of the screen scheme.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class ScreenTypes {
  @SerializedName("create")
  private Long create = null;

  @SerializedName("default")
  private Long _default = null;

  @SerializedName("edit")
  private Long edit = null;

  @SerializedName("view")
  private Long view = null;

  public ScreenTypes create(Long create) {
    this.create = create;
    return this;
  }

   /**
   * The ID of the create screen.
   * @return create
  **/
  @Schema(description = "The ID of the create screen.")
  public Long getCreate() {
    return create;
  }

  public void setCreate(Long create) {
    this.create = create;
  }

  public ScreenTypes _default(Long _default) {
    this._default = _default;
    return this;
  }

   /**
   * The ID of the default screen. Required when creating a screen scheme.
   * @return _default
  **/
  @Schema(description = "The ID of the default screen. Required when creating a screen scheme.")
  public Long getDefault() {
    return _default;
  }

  public void setDefault(Long _default) {
    this._default = _default;
  }

  public ScreenTypes edit(Long edit) {
    this.edit = edit;
    return this;
  }

   /**
   * The ID of the edit screen.
   * @return edit
  **/
  @Schema(description = "The ID of the edit screen.")
  public Long getEdit() {
    return edit;
  }

  public void setEdit(Long edit) {
    this.edit = edit;
  }

  public ScreenTypes view(Long view) {
    this.view = view;
    return this;
  }

   /**
   * The ID of the view screen.
   * @return view
  **/
  @Schema(description = "The ID of the view screen.")
  public Long getView() {
    return view;
  }

  public void setView(Long view) {
    this.view = view;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenTypes screenTypes = (ScreenTypes) o;
    return Objects.equals(this.create, screenTypes.create) &&
        Objects.equals(this._default, screenTypes._default) &&
        Objects.equals(this.edit, screenTypes.edit) &&
        Objects.equals(this.view, screenTypes.view);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, _default, edit, view);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenTypes {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    edit: ").append(toIndentedString(edit)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
