/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Time tracking details.
 */
@Schema(description = "Time tracking details.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class TimeTrackingDetails {
  @SerializedName("originalEstimate")
  private String originalEstimate = null;

  @SerializedName("originalEstimateSeconds")
  private Long originalEstimateSeconds = null;

  @SerializedName("remainingEstimate")
  private String remainingEstimate = null;

  @SerializedName("remainingEstimateSeconds")
  private Long remainingEstimateSeconds = null;

  @SerializedName("timeSpent")
  private String timeSpent = null;

  @SerializedName("timeSpentSeconds")
  private Long timeSpentSeconds = null;

   /**
   * The original estimate of time needed for this issue in readable format.
   * @return originalEstimate
  **/
  @Schema(description = "The original estimate of time needed for this issue in readable format.")
  public String getOriginalEstimate() {
    return originalEstimate;
  }

   /**
   * The original estimate of time needed for this issue in seconds.
   * @return originalEstimateSeconds
  **/
  @Schema(description = "The original estimate of time needed for this issue in seconds.")
  public Long getOriginalEstimateSeconds() {
    return originalEstimateSeconds;
  }

   /**
   * The remaining estimate of time needed for this issue in readable format.
   * @return remainingEstimate
  **/
  @Schema(description = "The remaining estimate of time needed for this issue in readable format.")
  public String getRemainingEstimate() {
    return remainingEstimate;
  }

   /**
   * The remaining estimate of time needed for this issue in seconds.
   * @return remainingEstimateSeconds
  **/
  @Schema(description = "The remaining estimate of time needed for this issue in seconds.")
  public Long getRemainingEstimateSeconds() {
    return remainingEstimateSeconds;
  }

   /**
   * Time worked on this issue in readable format.
   * @return timeSpent
  **/
  @Schema(description = "Time worked on this issue in readable format.")
  public String getTimeSpent() {
    return timeSpent;
  }

   /**
   * Time worked on this issue in seconds.
   * @return timeSpentSeconds
  **/
  @Schema(description = "Time worked on this issue in seconds.")
  public Long getTimeSpentSeconds() {
    return timeSpentSeconds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeTrackingDetails timeTrackingDetails = (TimeTrackingDetails) o;
    return Objects.equals(this.originalEstimate, timeTrackingDetails.originalEstimate) &&
        Objects.equals(this.originalEstimateSeconds, timeTrackingDetails.originalEstimateSeconds) &&
        Objects.equals(this.remainingEstimate, timeTrackingDetails.remainingEstimate) &&
        Objects.equals(this.remainingEstimateSeconds, timeTrackingDetails.remainingEstimateSeconds) &&
        Objects.equals(this.timeSpent, timeTrackingDetails.timeSpent) &&
        Objects.equals(this.timeSpentSeconds, timeTrackingDetails.timeSpentSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originalEstimate, originalEstimateSeconds, remainingEstimate, remainingEstimateSeconds, timeSpent, timeSpentSeconds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeTrackingDetails {\n");
    
    sb.append("    originalEstimate: ").append(toIndentedString(originalEstimate)).append("\n");
    sb.append("    originalEstimateSeconds: ").append(toIndentedString(originalEstimateSeconds)).append("\n");
    sb.append("    remainingEstimate: ").append(toIndentedString(remainingEstimate)).append("\n");
    sb.append("    remainingEstimateSeconds: ").append(toIndentedString(remainingEstimateSeconds)).append("\n");
    sb.append("    timeSpent: ").append(toIndentedString(timeSpent)).append("\n");
    sb.append("    timeSpentSeconds: ").append(toIndentedString(timeSpentSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
