/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * ProjectLandingPageInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class ProjectLandingPageInfo {
  @SerializedName("attributes")
  private Map<String, String> attributes = null;

  @SerializedName("boardId")
  private Long boardId = null;

  @SerializedName("boardName")
  private String boardName = null;

  @SerializedName("projectKey")
  private String projectKey = null;

  @SerializedName("projectType")
  private String projectType = null;

  @SerializedName("queueCategory")
  private String queueCategory = null;

  @SerializedName("queueId")
  private Long queueId = null;

  @SerializedName("queueName")
  private String queueName = null;

  @SerializedName("simpleBoard")
  private Boolean simpleBoard = null;

  @SerializedName("simplified")
  private Boolean simplified = null;

  @SerializedName("url")
  private String url = null;

  public ProjectLandingPageInfo attributes(Map<String, String> attributes) {
    this.attributes = attributes;
    return this;
  }

  public ProjectLandingPageInfo putAttributesItem(String key, String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, String>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public Map<String, String> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, String> attributes) {
    this.attributes = attributes;
  }

  public ProjectLandingPageInfo boardId(Long boardId) {
    this.boardId = boardId;
    return this;
  }

   /**
   * Get boardId
   * @return boardId
  **/
  @Schema(description = "")
  public Long getBoardId() {
    return boardId;
  }

  public void setBoardId(Long boardId) {
    this.boardId = boardId;
  }

  public ProjectLandingPageInfo boardName(String boardName) {
    this.boardName = boardName;
    return this;
  }

   /**
   * Get boardName
   * @return boardName
  **/
  @Schema(description = "")
  public String getBoardName() {
    return boardName;
  }

  public void setBoardName(String boardName) {
    this.boardName = boardName;
  }

  public ProjectLandingPageInfo projectKey(String projectKey) {
    this.projectKey = projectKey;
    return this;
  }

   /**
   * Get projectKey
   * @return projectKey
  **/
  @Schema(description = "")
  public String getProjectKey() {
    return projectKey;
  }

  public void setProjectKey(String projectKey) {
    this.projectKey = projectKey;
  }

  public ProjectLandingPageInfo projectType(String projectType) {
    this.projectType = projectType;
    return this;
  }

   /**
   * Get projectType
   * @return projectType
  **/
  @Schema(description = "")
  public String getProjectType() {
    return projectType;
  }

  public void setProjectType(String projectType) {
    this.projectType = projectType;
  }

  public ProjectLandingPageInfo queueCategory(String queueCategory) {
    this.queueCategory = queueCategory;
    return this;
  }

   /**
   * Get queueCategory
   * @return queueCategory
  **/
  @Schema(description = "")
  public String getQueueCategory() {
    return queueCategory;
  }

  public void setQueueCategory(String queueCategory) {
    this.queueCategory = queueCategory;
  }

  public ProjectLandingPageInfo queueId(Long queueId) {
    this.queueId = queueId;
    return this;
  }

   /**
   * Get queueId
   * @return queueId
  **/
  @Schema(description = "")
  public Long getQueueId() {
    return queueId;
  }

  public void setQueueId(Long queueId) {
    this.queueId = queueId;
  }

  public ProjectLandingPageInfo queueName(String queueName) {
    this.queueName = queueName;
    return this;
  }

   /**
   * Get queueName
   * @return queueName
  **/
  @Schema(description = "")
  public String getQueueName() {
    return queueName;
  }

  public void setQueueName(String queueName) {
    this.queueName = queueName;
  }

  public ProjectLandingPageInfo simpleBoard(Boolean simpleBoard) {
    this.simpleBoard = simpleBoard;
    return this;
  }

   /**
   * Get simpleBoard
   * @return simpleBoard
  **/
  @Schema(description = "")
  public Boolean isSimpleBoard() {
    return simpleBoard;
  }

  public void setSimpleBoard(Boolean simpleBoard) {
    this.simpleBoard = simpleBoard;
  }

  public ProjectLandingPageInfo simplified(Boolean simplified) {
    this.simplified = simplified;
    return this;
  }

   /**
   * Get simplified
   * @return simplified
  **/
  @Schema(description = "")
  public Boolean isSimplified() {
    return simplified;
  }

  public void setSimplified(Boolean simplified) {
    this.simplified = simplified;
  }

  public ProjectLandingPageInfo url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectLandingPageInfo projectLandingPageInfo = (ProjectLandingPageInfo) o;
    return Objects.equals(this.attributes, projectLandingPageInfo.attributes) &&
        Objects.equals(this.boardId, projectLandingPageInfo.boardId) &&
        Objects.equals(this.boardName, projectLandingPageInfo.boardName) &&
        Objects.equals(this.projectKey, projectLandingPageInfo.projectKey) &&
        Objects.equals(this.projectType, projectLandingPageInfo.projectType) &&
        Objects.equals(this.queueCategory, projectLandingPageInfo.queueCategory) &&
        Objects.equals(this.queueId, projectLandingPageInfo.queueId) &&
        Objects.equals(this.queueName, projectLandingPageInfo.queueName) &&
        Objects.equals(this.simpleBoard, projectLandingPageInfo.simpleBoard) &&
        Objects.equals(this.simplified, projectLandingPageInfo.simplified) &&
        Objects.equals(this.url, projectLandingPageInfo.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, boardId, boardName, projectKey, projectType, queueCategory, queueId, queueName, simpleBoard, simplified, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectLandingPageInfo {\n");
    
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    boardId: ").append(toIndentedString(boardId)).append("\n");
    sb.append("    boardName: ").append(toIndentedString(boardName)).append("\n");
    sb.append("    projectKey: ").append(toIndentedString(projectKey)).append("\n");
    sb.append("    projectType: ").append(toIndentedString(projectType)).append("\n");
    sb.append("    queueCategory: ").append(toIndentedString(queueCategory)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    queueName: ").append(toIndentedString(queueName)).append("\n");
    sb.append("    simpleBoard: ").append(toIndentedString(simpleBoard)).append("\n");
    sb.append("    simplified: ").append(toIndentedString(simplified)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
