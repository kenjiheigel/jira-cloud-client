/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Announcement banner configuration.
 */
@Schema(description = "Announcement banner configuration.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class AnnouncementBannerConfiguration {
  @SerializedName("hashId")
  private String hashId = null;

  @SerializedName("isDismissible")
  private Boolean isDismissible = null;

  @SerializedName("isEnabled")
  private Boolean isEnabled = null;

  @SerializedName("message")
  private String message = null;

  /**
   * Visibility of the announcement banner.
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    @SerializedName("PUBLIC")
    PUBLIC("PUBLIC"),
    @SerializedName("PRIVATE")
    PRIVATE("PRIVATE");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VisibilityEnum fromValue(String input) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return VisibilityEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("visibility")
  private VisibilityEnum visibility = null;

   /**
   * Hash of the banner data. The client detects updates by comparing hash IDs.
   * @return hashId
  **/
  @Schema(description = "Hash of the banner data. The client detects updates by comparing hash IDs.")
  public String getHashId() {
    return hashId;
  }

   /**
   * Flag indicating if the announcement banner can be dismissed by the user.
   * @return isDismissible
  **/
  @Schema(description = "Flag indicating if the announcement banner can be dismissed by the user.")
  public Boolean isIsDismissible() {
    return isDismissible;
  }

   /**
   * Flag indicating if the announcement banner is enabled or not.
   * @return isEnabled
  **/
  @Schema(description = "Flag indicating if the announcement banner is enabled or not.")
  public Boolean isIsEnabled() {
    return isEnabled;
  }

   /**
   * The text on the announcement banner.
   * @return message
  **/
  @Schema(description = "The text on the announcement banner.")
  public String getMessage() {
    return message;
  }

   /**
   * Visibility of the announcement banner.
   * @return visibility
  **/
  @Schema(description = "Visibility of the announcement banner.")
  public VisibilityEnum getVisibility() {
    return visibility;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnouncementBannerConfiguration announcementBannerConfiguration = (AnnouncementBannerConfiguration) o;
    return Objects.equals(this.hashId, announcementBannerConfiguration.hashId) &&
        Objects.equals(this.isDismissible, announcementBannerConfiguration.isDismissible) &&
        Objects.equals(this.isEnabled, announcementBannerConfiguration.isEnabled) &&
        Objects.equals(this.message, announcementBannerConfiguration.message) &&
        Objects.equals(this.visibility, announcementBannerConfiguration.visibility);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashId, isDismissible, isEnabled, message, visibility);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnouncementBannerConfiguration {\n");
    
    sb.append("    hashId: ").append(toIndentedString(hashId)).append("\n");
    sb.append("    isDismissible: ").append(toIndentedString(isDismissible)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
