/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The default value for a version picker custom field.
 */
@Schema(description = "The default value for a version picker custom field.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class CustomFieldContextDefaultValueSingleVersionPicker implements CustomFieldContextDefaultValue {
  @SerializedName("type")
  private String type = null;

  @SerializedName("versionId")
  private String versionId = null;

  @SerializedName("versionOrder")
  private String versionOrder = null;

  public CustomFieldContextDefaultValueSingleVersionPicker type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CustomFieldContextDefaultValueSingleVersionPicker versionId(String versionId) {
    this.versionId = versionId;
    return this;
  }

   /**
   * The ID of the default version.
   * @return versionId
  **/
  @Schema(required = true, description = "The ID of the default version.")
  public String getVersionId() {
    return versionId;
  }

  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }

  public CustomFieldContextDefaultValueSingleVersionPicker versionOrder(String versionOrder) {
    this.versionOrder = versionOrder;
    return this;
  }

   /**
   * The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are &#x60;\&quot;releasedFirst\&quot;&#x60; and &#x60;\&quot;unreleasedFirst\&quot;&#x60;.
   * @return versionOrder
  **/
  @Schema(description = "The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are `\"releasedFirst\"` and `\"unreleasedFirst\"`.")
  public String getVersionOrder() {
    return versionOrder;
  }

  public void setVersionOrder(String versionOrder) {
    this.versionOrder = versionOrder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldContextDefaultValueSingleVersionPicker customFieldContextDefaultValueSingleVersionPicker = (CustomFieldContextDefaultValueSingleVersionPicker) o;
    return Objects.equals(this.type, customFieldContextDefaultValueSingleVersionPicker.type) &&
        Objects.equals(this.versionId, customFieldContextDefaultValueSingleVersionPicker.versionId) &&
        Objects.equals(this.versionOrder, customFieldContextDefaultValueSingleVersionPicker.versionOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, versionId, versionOrder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldContextDefaultValueSingleVersionPicker {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    versionOrder: ").append(toIndentedString(versionOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
