/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.UserFilter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Defaults for a Forge user custom field.
 */
@Schema(description = "Defaults for a Forge user custom field.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class CustomFieldContextDefaultValueForgeUserField implements CustomFieldContextDefaultValue {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("contextId")
  private String contextId = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("userFilter")
  private UserFilter userFilter = null;

  public CustomFieldContextDefaultValueForgeUserField accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The ID of the default user.
   * @return accountId
  **/
  @Schema(required = true, description = "The ID of the default user.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public CustomFieldContextDefaultValueForgeUserField contextId(String contextId) {
    this.contextId = contextId;
    return this;
  }

   /**
   * The ID of the context.
   * @return contextId
  **/
  @Schema(required = true, description = "The ID of the context.")
  public String getContextId() {
    return contextId;
  }

  public void setContextId(String contextId) {
    this.contextId = contextId;
  }

  public CustomFieldContextDefaultValueForgeUserField type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CustomFieldContextDefaultValueForgeUserField userFilter(UserFilter userFilter) {
    this.userFilter = userFilter;
    return this;
  }

   /**
   * Get userFilter
   * @return userFilter
  **/
  @Schema(required = true, description = "")
  public UserFilter getUserFilter() {
    return userFilter;
  }

  public void setUserFilter(UserFilter userFilter) {
    this.userFilter = userFilter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldContextDefaultValueForgeUserField customFieldContextDefaultValueForgeUserField = (CustomFieldContextDefaultValueForgeUserField) o;
    return Objects.equals(this.accountId, customFieldContextDefaultValueForgeUserField.accountId) &&
        Objects.equals(this.contextId, customFieldContextDefaultValueForgeUserField.contextId) &&
        Objects.equals(this.type, customFieldContextDefaultValueForgeUserField.type) &&
        Objects.equals(this.userFilter, customFieldContextDefaultValueForgeUserField.userFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, contextId, type, userFilter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldContextDefaultValueForgeUserField {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    contextId: ").append(toIndentedString(contextId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userFilter: ").append(toIndentedString(userFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
