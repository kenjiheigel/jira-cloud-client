/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.WorkflowElementReference;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The details about a workflow validation error.
 */
@Schema(description = "The details about a workflow validation error.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-21T14:14:33.600-07:00[America/Los_Angeles]")

public class WorkflowValidationError {
  @SerializedName("code")
  private String code = null;

  @SerializedName("elementReference")
  private WorkflowElementReference elementReference = null;

  /**
   * The validation error level.
   */
  @JsonAdapter(LevelEnum.Adapter.class)
  public enum LevelEnum {
    @SerializedName("WARNING")
    WARNING("WARNING"),
    @SerializedName("ERROR")
    ERROR("ERROR");

    private String value;

    LevelEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LevelEnum fromValue(String input) {
      for (LevelEnum b : LevelEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LevelEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public LevelEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return LevelEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("level")
  private LevelEnum level = null;

  @SerializedName("message")
  private String message = null;

  /**
   * The type of element the error or warning references.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    @SerializedName("RULE")
    RULE("RULE"),
    @SerializedName("STATUS")
    STATUS("STATUS"),
    @SerializedName("STATUS_LAYOUT")
    STATUS_LAYOUT("STATUS_LAYOUT"),
    @SerializedName("STATUS_PROPERTY")
    STATUS_PROPERTY("STATUS_PROPERTY"),
    @SerializedName("WORKFLOW")
    WORKFLOW("WORKFLOW"),
    @SerializedName("TRANSITION")
    TRANSITION("TRANSITION"),
    @SerializedName("TRANSITION_PROPERTY")
    TRANSITION_PROPERTY("TRANSITION_PROPERTY"),
    @SerializedName("SCOPE")
    SCOPE("SCOPE"),
    @SerializedName("STATUS_MAPPING")
    STATUS_MAPPING("STATUS_MAPPING"),
    @SerializedName("TRIGGER")
    TRIGGER("TRIGGER");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  public WorkflowValidationError code(String code) {
    this.code = code;
    return this;
  }

   /**
   * An error code.
   * @return code
  **/
  @Schema(description = "An error code.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public WorkflowValidationError elementReference(WorkflowElementReference elementReference) {
    this.elementReference = elementReference;
    return this;
  }

   /**
   * Get elementReference
   * @return elementReference
  **/
  @Schema(description = "")
  public WorkflowElementReference getElementReference() {
    return elementReference;
  }

  public void setElementReference(WorkflowElementReference elementReference) {
    this.elementReference = elementReference;
  }

  public WorkflowValidationError level(LevelEnum level) {
    this.level = level;
    return this;
  }

   /**
   * The validation error level.
   * @return level
  **/
  @Schema(description = "The validation error level.")
  public LevelEnum getLevel() {
    return level;
  }

  public void setLevel(LevelEnum level) {
    this.level = level;
  }

  public WorkflowValidationError message(String message) {
    this.message = message;
    return this;
  }

   /**
   * An error message.
   * @return message
  **/
  @Schema(description = "An error message.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public WorkflowValidationError type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of element the error or warning references.
   * @return type
  **/
  @Schema(description = "The type of element the error or warning references.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowValidationError workflowValidationError = (WorkflowValidationError) o;
    return Objects.equals(this.code, workflowValidationError.code) &&
        Objects.equals(this.elementReference, workflowValidationError.elementReference) &&
        Objects.equals(this.level, workflowValidationError.level) &&
        Objects.equals(this.message, workflowValidationError.message) &&
        Objects.equals(this.type, workflowValidationError.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, elementReference, level, message, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowValidationError {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    elementReference: ").append(toIndentedString(elementReference)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
